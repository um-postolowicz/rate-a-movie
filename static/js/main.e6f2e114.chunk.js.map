{"version":3,"sources":["images/no-poster.svg","components/Rate.js","components/ButtonDetails.js","pages/Details.js","components/Header.js","components/Modal.js","components/Search.js","pages/MainPage.js","images/erroricon.svg","pages/ErrorPage.js","components/Movie.js","components/SearchBar.js","pages/MoviesList.js","App.js","index.js"],"names":["starsBasic","id","icon","Rate","ref","useRef","useState","isRateSent","setIsRateSent","stars","setStars","className","onClick","e","table","clickPosition","clientX","margin","current","offsetParent","offsetLeft","clickPositionInStarsDiv","starId","Math","ceil","forEach","element","i","index","floor","map","star","ButtonDetails","buttonContent","history","useHistory","goBack","DETAIL_API_URL","Details","isPortrait","setIsPortrait","isBig","setIsBig","movieDetails","setMovieDetails","useParams","Actors","Awards","Country","Director","Genre","Plot","Poster","Ratings","Released","Runtime","Title","Type","Writer","checkOrientation","window","matchMedia","matches","useEffect","scroll","scrollTo","fetch","then","response","ok","json","Error","status","catch","error","console","log","addEventListener","removeEventListener","alt","src","noPoster","rating","Source","Value","Header","Modal","closeModal","isModalVisible","stopPropagation","href","Search","inputValue","setInputValue","handleSearch","preventDefault","placeholder","classList","remove","add","push","onSubmit","onChange","target","value","type","MainPage","setIsMobileVisible","ErrorPage","errorIcon","Movie","poster","searchValue","title","year","showRate","setShowRate","getAttribute","attributes","textContent","toUpperCase","to","SearchBar","BASE_API_URL","MoviesList","isChanged","setIsChanged","isSearch","setIsSearch","movies","setMovies","moviesList","setMoviesList","catchError","movie","imdbID","Year","scrollHeight","innerHeight","scrollAfterSearch","htmlFor","name","select","selected","options","selectedIndex","moviesSort","sort","a","b","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6f2e114.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no-poster.b16e615a.svg\";","import React, { useRef, useState } from \"react\";\r\nimport { BsStar, BsStarHalf, BsStarFill } from \"react-icons/bs\";\r\n\r\nconst starsBasic = [\r\n  {\r\n    id: 1,\r\n    icon: <BsStar />,\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: <BsStar />,\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: <BsStar />,\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: <BsStar />,\r\n  },\r\n  {\r\n    id: 5,\r\n    icon: <BsStar />,\r\n  },\r\n];\r\n\r\nconst Rate = () => {\r\n  const ref = useRef(null);\r\n  const [isRateSent, setIsRateSent] = useState(false);\r\n  const [stars, setStars] = useState(starsBasic);\r\n\r\n  const handleRate = (e) => {\r\n    let table = [...starsBasic];\r\n    setStars(table);\r\n    const clickPosition = e.clientX;\r\n    const margin = ref.current.offsetParent.offsetLeft;\r\n    const starsLeft = ref.current.offsetLeft;\r\n    const clickPositionInStarsDiv = clickPosition - starsLeft - margin - 2;\r\n    const starId = Math.ceil(clickPositionInStarsDiv / 12.5);\r\n    stars.forEach((element) => (element.icon = <BsStar />));\r\n    for (let i = 0; i < starId / 2; i++) {\r\n      stars[i].icon = <BsStarFill />;\r\n    }\r\n    if (starId % 2 !== 0) {\r\n      const index = Math.floor(starId / 2);\r\n      stars[index].icon = <BsStarHalf />;\r\n    }\r\n    return stars;\r\n  };\r\n\r\n  const sendRate = () => {\r\n    setIsRateSent(true);\r\n    let table = starsBasic.map((star) => (star.icon = <BsStar />));\r\n    setStars(table);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isRateSent ? (\r\n        <p className=\"movies__rate-sent\">Thank you for your rate!</p>\r\n      ) : (\r\n        <div className=\"movies__rate-and-send\">\r\n          <ul className=\"movies__stars\" onClick={handleRate} ref={ref}>\r\n            {stars.map((star) => (\r\n              <li key={star.id}>{star.icon}</li>\r\n            ))}\r\n          </ul>\r\n          <button\r\n            className=\"movies__btn btn movies__btn--rate\"\r\n            onClick={sendRate}\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rate;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\r\n\r\nconst ButtonDetails = ({ buttonContent }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <button className=\"back logo-back__btn\" onClick={() => history.goBack()}>\r\n        <FaArrowCircleLeft className=\"back__icon\" />\r\n        <p className=\"back__text\">{buttonContent}</p>\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport noPoster from \"../images/no-poster.svg\";\r\nimport Rate from \"../components/Rate\";\r\nimport ButtonDetails from \"../components/ButtonDetails\";\r\n\r\nconst API_KEY = \"2fc6065a\";\r\nconst DETAIL_API_URL = `http://www.omdbapi.com/?apikey=${API_KEY}&i=`;\r\n\r\nconst Details = () => {\r\n  const [isPortrait, setIsPortrait] = useState(false);\r\n  const [isBig, setIsBig] = useState(true);\r\n  const [movieDetails, setMovieDetails] = useState([]);\r\n  let { id } = useParams();\r\n  const {\r\n    Actors,\r\n    Awards,\r\n    Country,\r\n    Director,\r\n    Genre,\r\n    Plot,\r\n    Poster,\r\n    Ratings,\r\n    Released,\r\n    Runtime,\r\n    Title,\r\n    Type,\r\n    Writer,\r\n  } = movieDetails;\r\n\r\n  const checkOrientation = () => {\r\n    if (window.matchMedia(\"(orientation:landscape)\").matches) {\r\n      setIsPortrait(true);\r\n    } else {\r\n      setIsPortrait(false);\r\n    }\r\n    if (\r\n      window.matchMedia(\"(min-width:767px) and (orientation:portrait)\")\r\n        .matches ||\r\n      window.matchMedia(\"(min-width:1023px) and (orientation:landscape)\")\r\n        .matches\r\n    ) {\r\n      setIsBig(true);\r\n    } else {\r\n      setIsBig(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scroll.scrollTo(0);\r\n    setMovieDetails([]);\r\n    fetch(DETAIL_API_URL + id)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(`Http error: ${response.status}`);\r\n        }\r\n      })\r\n      .then((response) => setMovieDetails(response))\r\n      .catch((error) => console.log(error));\r\n    window.addEventListener(\"orientationchange\", checkOrientation);\r\n    return () => {\r\n      window.removeEventListener(\"orientationchange\", checkOrientation);\r\n    };\r\n  }, [id, isPortrait, isBig]);\r\n\r\n  return (\r\n    <>\r\n      {movieDetails ? (\r\n        <>\r\n          {isBig ? (\r\n            <div className=\"logo-back\">\r\n              <ButtonDetails buttonContent={\"Go Back to Movies List\"} />\r\n              <h1 className=\"logo-back__logo\">Rate your movie</h1>\r\n            </div>\r\n          ) : (\r\n            <ButtonDetails\r\n              buttonContent={isPortrait ? \"Go Back to Movies List\" : null}\r\n            />\r\n          )}\r\n\r\n          <div className=\"movie\">\r\n            <h1 className=\"movie__title\">{Title}</h1>\r\n            <p className=\"movie__type\">{Type}</p>\r\n            <img\r\n              alt=\"Movie poster\"\r\n              className=\"movie__poster\"\r\n              src={Poster ? Poster : noPoster}\r\n            />\r\n            <p className=\"movie__description\">{Plot}</p>\r\n            <div className=\"movie__user-rate\">\r\n              <h2 className=\"movie__user-rate-title\">Rate it:</h2>\r\n              <Rate />\r\n            </div>\r\n            <div className=\"movie__information\">\r\n              <h2 className=\"movie__information-title\">Info:</h2>\r\n              <p className=\"movie__genre\">\r\n                Genre: <span>{Genre}</span>\r\n              </p>\r\n              <p className=\"movie__country\">\r\n                Country: <span>{Country}</span>\r\n              </p>\r\n              <p className=\"movie__director\">\r\n                Director: <span>{Director}</span>\r\n              </p>\r\n              <p className=\"movie__date\">\r\n                Date of release: <span>{Released}</span>\r\n              </p>\r\n              <p className=\"movie__actors\">\r\n                Actors: <span>{Actors}</span>\r\n              </p>\r\n              <p className=\"movie__writers\">\r\n                Writers: <span>{Writer}</span>\r\n              </p>\r\n              <p className=\"movie__runtime\">\r\n                Runtime: <span>{Runtime}</span>\r\n              </p>\r\n              <p className=\"movie__awards\">\r\n                Awards: <span>{Awards}</span>\r\n              </p>\r\n            </div>\r\n            <div className=\"movie__rates\">\r\n              <h2 className=\"movie__rates-title\">Rates:</h2>\r\n              {Ratings ? (\r\n                Ratings.map((rating) => (\r\n                  <p className=\"movie__rates-types\" key={rating.Source}>\r\n                    {rating.Source}: <span>{rating.Value}</span>\r\n                  </p>\r\n                ))\r\n              ) : (\r\n                <p className=\"movie__no-rate\">No other rates avaliable.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <h1>Lala</h1>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Details;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__color-opacity\">\r\n        <div className=\"header__container\">\r\n          <h1 className=\"header__title\">Rate your Movie</h1>\r\n          <p className=\"header__desc\">\r\n            <span>\r\n              Have you just watched an amazing movie and want to share that\r\n              delight with other people?\r\n            </span>{\" \"}\r\n            <span>\r\n              Or the movie was a disaster and you want to save others from that\r\n              nightmare?\r\n            </span>{\" \"}\r\n            <span>You are in the right place!</span>{\" \"}\r\n            <span>\r\n              Find a movie by typing it's title below and feel free to rate it!\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Modal = ({ closeModal, isModalVisible }) => {\r\n  if (!isModalVisible) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"modal\" onClick={closeModal}>\r\n      <div className=\"modal__content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal__header\">\r\n          <h3 className=\"modal__header-title\">About the Page</h3>\r\n          <div className=\"modal__close\">\r\n            <button className=\"modal__close-btn\" onClick={closeModal}>\r\n              X\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal__body\">\r\n          <span className=\"modal__welcome\">Welcome dear user!</span>\r\n          <p className=\"modal__text\">\r\n            I would like to inform you, that this page was created only for\r\n            recruitment purposes. Your ratings are not stored in any database.\r\n          </p>\r\n          <p className=\"modal__text\">\r\n            <span className=\"modal__important\">Rate your Movie</span> page gets\r\n            all the information from OMDb API. Check it here:{\" \"}\r\n            <a className=\"modal__link\" href=\"http://www.omdbapi.com\">\r\n              OMDb API\r\n            </a>\r\n            .\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Search = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const history = useHistory();\r\n  const ref = useRef(null);\r\n\r\n  const handleInput = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    if (!inputValue) {\r\n      ref.current.placeholder = \"You have to type a title\";\r\n      ref.current.classList.add(\"no-input\");\r\n      console.log(ref.current.classList);\r\n    } else {\r\n      ref.current.placeholder = \"Find a movie\";\r\n      ref.current.classList.remove(\"no-input\");\r\n    }\r\n    history.push(`/${inputValue}`);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"search\" onSubmit={handleSearch}>\r\n      <input\r\n        className=\"search__input\"\r\n        onChange={handleInput}\r\n        placeholder=\"Find a movie\"\r\n        ref={ref}\r\n        type=\"text\"\r\n        value={inputValue}\r\n      />\r\n      <button className=\"search__btn btn\" onClick={handleSearch} type=\"submit\">\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Modal from \"../components/Modal\";\r\nimport Search from \"../components/Search\";\r\n\r\nconst MainPage = () => {\r\n  const [isModalVisible, setIsMobileVisible] = useState(true);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      <Search />\r\n      <Modal\r\n        closeModal={() => setIsMobileVisible(false)}\r\n        isModalVisible={isModalVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","export default __webpack_public_path__ + \"static/media/erroricon.91ce532b.svg\";","import React from \"react\";\r\nimport errorIcon from \"../images/erroricon.svg\";\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <>\r\n      <div className=\"error\">\r\n        <img className=\"error__sign\" src={errorIcon} alt=\"error icon\" />\r\n        <h1 className=\"error__text\">\r\n          Sorry, but the title you entered was most probably misspelled. Try to\r\n          enter it again.\r\n        </h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Rate from \"./Rate\";\r\nimport noPoster from \"../images/no-poster.svg\";\r\n\r\nconst Movie = ({ index, poster, searchValue, title, type, year }) => {\r\n  const [showRate, setShowRate] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const imgSrc = ref.current.getAttribute(\"src\");\r\n    if (imgSrc === \"N/A\") {\r\n      ref.current.attributes.src.textContent = noPoster;\r\n    }\r\n  });\r\n\r\n  const handleRateClick = (e) => {\r\n    e.preventDefault();\r\n    setShowRate(true);\r\n  };\r\n\r\n  return (\r\n    <li className=\"movies__container\">\r\n      <h2 className=\"movies__title\">{title}</h2>\r\n      <p className=\"movies__type\">{type.toUpperCase()}</p>\r\n      <h3 className=\"movies__year\">{year}</h3>\r\n      <img\r\n        alt=\"movie poster\"\r\n        className=\"movies__poster\"\r\n        ref={ref}\r\n        src={poster}\r\n      />\r\n      <NavLink className=\"movies__btn btn\" to={`/${searchValue}/${index}`}>\r\n        See details\r\n      </NavLink>\r\n      {showRate ? (\r\n        <Rate />\r\n      ) : (\r\n        <button className=\"movies__btn btn\" onClick={handleRateClick}>\r\n          Rate it!\r\n        </button>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport Search from \"./Search\";\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <>\r\n      <div className=\"search-bar\">\r\n        <div className=\"search-bar__container\">\r\n          <h4 className=\"search-bar__logo\">R Y M</h4>\r\n          <Search />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport Header from \"../components/Header\";\r\nimport Movie from \"../components/Movie\";\r\nimport Search from \"../components/Search\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nconst API_KEY = \"2fc6065a\";\r\nconst BASE_API_URL = `http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=`;\r\n\r\nconst MoviesList = () => {\r\n  let { searchValue } = useParams();\r\n\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const [isSearch, setIsSearch] = useState(false);\r\n  const [movies, setMovies] = useState([]);\r\n  const [moviesList, setMoviesList] = useState(\"\");\r\n\r\n  const ref = useRef(null);\r\n\r\n  const scrollAfterSearch = () => {\r\n    const scrollHeight = window.innerHeight;\r\n    scroll.scrollTo(scrollHeight);\r\n  };\r\n\r\n  const catchError = () => {\r\n    try {\r\n      movies.map((movie) =>\r\n        movie.Type === \"movie\" || \"series\" ? (\r\n          <Movie\r\n            key={movie.imdbID}\r\n            index={movie.imdbID}\r\n            poster={movie.Poster}\r\n            searchValue={searchValue}\r\n            title={movie.Title}\r\n            type={movie.Type}\r\n            year={movie.Year}\r\n          />\r\n        ) : null\r\n      );\r\n    } catch {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMovies([]);\r\n    fetch(BASE_API_URL + `\"${searchValue}\"`)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(`Http error: ${response.status}`);\r\n        }\r\n      })\r\n      .then((response) => setMovies(response.Search))\r\n      .catch((error) => console.log(error));\r\n    scrollAfterSearch();\r\n    setIsSearch(true);\r\n  }, [searchValue]);\r\n\r\n  const handleSelect = () => {\r\n    setIsChanged(!isChanged);\r\n    const select = ref.current;\r\n    const selected = select.options[select.selectedIndex].value;\r\n    let moviesSort = movies;\r\n    if (selected === \"title-up\") {\r\n      moviesSort.sort((a, b) => (a.Title > b.Title ? 1 : -1));\r\n    } else if (selected === \"title-down\") {\r\n      moviesSort.sort((a, b) => (b.Title > a.Title ? 1 : -1));\r\n    } else if (selected === \"year-up\") {\r\n      moviesSort.sort((a, b) => (a.Year > b.Year ? 1 : -1));\r\n    } else if (selected === \"year-down\") {\r\n      moviesSort.sort((a, b) => (b.Year > a.Year ? 1 : -1));\r\n    }\r\n    setMoviesList(moviesSort);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Search />\r\n\r\n      {!catchError() && isSearch && (\r\n        <>\r\n          <SearchBar />\r\n          <form className=\"select__container\">\r\n            <label className=\"select__title\" htmlFor=\"select\">\r\n              Sort by:\r\n            </label>\r\n            <select\r\n              name=\"select\"\r\n              id=\"select\"\r\n              className=\"select__list\"\r\n              onChange={handleSelect}\r\n              ref={ref}\r\n            >\r\n              <option value=\"default\">Select...</option>\r\n              <option value=\"title-up\">Title of the movie (ascending)</option>\r\n              <option value=\"title-down\">\r\n                Title of the movie (descending)\r\n              </option>\r\n              <option value=\"year-up\">\r\n                Year of the production (ascending)\r\n              </option>\r\n              <option value=\"year-down\">\r\n                Year of the production (descending)\r\n              </option>\r\n            </select>\r\n          </form>\r\n        </>\r\n      )}\r\n      {!catchError() && (\r\n        <ul className=\"movies\">\r\n          {moviesList\r\n            ? moviesList.map((movie) =>\r\n                movie.Type === \"movie\" || \"series\" ? (\r\n                  <Movie\r\n                    key={movie.imdbID}\r\n                    index={movie.imdbID}\r\n                    poster={movie.Poster}\r\n                    searchValue={searchValue}\r\n                    title={movie.Title}\r\n                    type={movie.Type}\r\n                    year={movie.Year}\r\n                  />\r\n                ) : null\r\n              )\r\n            : movies.map((movie) =>\r\n                movie.Type === \"movie\" || \"series\" ? (\r\n                  <Movie\r\n                    key={movie.imdbID}\r\n                    index={movie.imdbID}\r\n                    poster={movie.Poster}\r\n                    searchValue={searchValue}\r\n                    title={movie.Title}\r\n                    type={movie.Type}\r\n                    year={movie.Year}\r\n                  />\r\n                ) : null\r\n              )}\r\n        </ul>\r\n      )}\r\n      {catchError() && <ErrorPage />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./styles/style.css\";\nimport Details from \"./pages/Details\";\nimport MainPage from \"./pages/MainPage\";\nimport MoviesList from \"./pages/MoviesList\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={MainPage} exact />\n        <Route path=\"/:searchValue\" component={MoviesList} exact />\n        <Route path=\"/:searchValue/:id\" component={Details} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}